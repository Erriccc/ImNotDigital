// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8HMNFKnEv7gJ55SbTqvTiU
// Component: 1zyzTuVyET
import * as React from "react";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_im_xbeanies.module.css"; // plasmic-import: 8HMNFKnEv7gJ55SbTqvTiU/projectcss
import sty from "./PlasmicImNotArtFooter.module.css"; // plasmic-import: 1zyzTuVyET/css
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: 6RdOQRrPg/icon

export const PlasmicImNotArtFooter__VariantProps = new Array();

export const PlasmicImNotArtFooter__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicImNotArtFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return true ? (
    <p.Stack
      as={"div"}
      data-plasmic-name={"footer"}
      data-plasmic-override={overrides.footer}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.footer
      )}
    >
      <Line1Icon
        data-plasmic-name={"svg"}
        data-plasmic-override={overrides.svg}
        className={classNames(projectcss.all, sty.svg)}
        role={"img"}
      />

      <div
        data-plasmic-name={"imnotArt6"}
        data-plasmic-override={overrides.imnotArt6}
        className={classNames(projectcss.all, sty.imnotArt6)}
        onClick={async event => {
          const $steps = {};
          $steps["customFunction"] = true
            ? (() => {
                const args = {
                  customFunction: __wrapUserFunction(
                    {
                      type: "InteractionArgLoc",
                      actionName: "customFunction",
                      interactionUuid: "YLa6ySufG",
                      componentUuid: "1zyzTuVyET",
                      argName: "customFunction"
                    },
                    () => () => {
                      return (window.location.href =
                        "https://www.imnotart.com/");
                    }
                  )
                };
                return __wrapUserFunction(
                  {
                    type: "InteractionLoc",
                    actionName: "customFunction",
                    interactionUuid: "YLa6ySufG",
                    componentUuid: "1zyzTuVyET"
                  },
                  () =>
                    (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [args]),
                  args
                );
              })()
            : undefined;
          if (
            typeof $steps["customFunction"] === "object" &&
            typeof $steps["customFunction"].then === "function"
          ) {
            $steps["customFunction"] = await __wrapUserPromise(
              {
                type: "InteractionLoc",
                actionName: "customFunction",
                interactionUuid: "YLa6ySufG",
                componentUuid: "1zyzTuVyET"
              },
              $steps["customFunction"]
            );
          }
        }}
      />

      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__lJTh5
        )}
      >
        {"Copyright Â© 2022 imnotArt, LLC. All Rights Reserved."}
      </div>

      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__sc4C3
        )}
      >
        {"1010 N. Ashland, Chicago IL"}
      </div>

      <p.PlasmicImg
        data-plasmic-name={"img"}
        data-plasmic-override={overrides.img}
        alt={""}
        className={classNames(sty.img)}
        displayHeight={"auto"}
        displayMaxHeight={"none"}
        displayMaxWidth={"100%"}
        displayMinHeight={"0"}
        displayMinWidth={"0"}
        displayWidth={"151px"}
        onClick={async event => {
          const $steps = {};
          $steps["customFunction"] = true
            ? (() => {
                const args = {
                  customFunction: __wrapUserFunction(
                    {
                      type: "InteractionArgLoc",
                      actionName: "customFunction",
                      interactionUuid: "OLjWrUopS",
                      componentUuid: "1zyzTuVyET",
                      argName: "customFunction"
                    },
                    () => () => {
                      return (window.location.href =
                        "https://www.ethdenver.com/");
                    }
                  )
                };
                return __wrapUserFunction(
                  {
                    type: "InteractionLoc",
                    actionName: "customFunction",
                    interactionUuid: "OLjWrUopS",
                    componentUuid: "1zyzTuVyET"
                  },
                  () =>
                    (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [args]),
                  args
                );
              })()
            : undefined;
          if (
            typeof $steps["customFunction"] === "object" &&
            typeof $steps["customFunction"].then === "function"
          ) {
            $steps["customFunction"] = await __wrapUserPromise(
              {
                type: "InteractionLoc",
                actionName: "customFunction",
                interactionUuid: "OLjWrUopS",
                componentUuid: "1zyzTuVyET"
              },
              $steps["customFunction"]
            );
          }
        }}
        src={{
          src: "/plasmic/im_xbeanies/images/ethDenverLogopng.png",
          fullWidth: 1008,
          fullHeight: 987,
          aspectRatio: undefined
        }}
      />
    </p.Stack>
  ) : null;
}

const PlasmicDescendants = {
  footer: ["footer", "svg", "imnotArt6", "img"],
  svg: ["svg"],
  imnotArt6: ["imnotArt6"],
  img: ["img"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicImNotArtFooter__ArgProps,
          internalVariantPropNames: PlasmicImNotArtFooter__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicImNotArtFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "footer") {
    func.displayName = "PlasmicImNotArtFooter";
  } else {
    func.displayName = `PlasmicImNotArtFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicImNotArtFooter = Object.assign(
  // Top-level PlasmicImNotArtFooter renders the root element
  makeNodeComponent("footer"),
  {
    // Helper components rendering sub-elements
    svg: makeNodeComponent("svg"),
    imnotArt6: makeNodeComponent("imnotArt6"),
    img: makeNodeComponent("img"),
    // Metadata about props expected for PlasmicImNotArtFooter
    internalVariantProps: PlasmicImNotArtFooter__VariantProps,
    internalArgProps: PlasmicImNotArtFooter__ArgProps
  }
);

export default PlasmicImNotArtFooter;
/* prettier-ignore-end */
